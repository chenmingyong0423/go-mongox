// Generated by optioner -type OpContext; DO NOT EDIT
// If you have any questions, please create issues and submit contributions at:
// https://github.com/chenmingyong0423/go-optioner

package operation

import (
	"go.mongodb.org/mongo-driver/v2/mongo"
)

type OpContextOption func(*OpContext)

func NewOpContext(col *mongo.Collection, opts ...OpContextOption) *OpContext {
	opContext := &OpContext{
		Col: col,
	}

	for _, opt := range opts {
		opt(opContext)
	}

	return opContext
}

func WithDoc(doc any) OpContextOption {
	return func(opContext *OpContext) {
		opContext.Doc = doc
	}
}

func WithFilter(filter any) OpContextOption {
	return func(opContext *OpContext) {
		opContext.Filter = filter
	}
}

func WithReplacement(replacement any) OpContextOption {
	return func(opContext *OpContext) {
		opContext.Replacement = replacement
	}
}

func WithUpdates(updates any) OpContextOption {
	return func(opContext *OpContext) {
		opContext.Updates = updates
	}
}

func WithMongoOptions(mongoOptions any) OpContextOption {
	return func(opContext *OpContext) {
		opContext.MongoOptions = mongoOptions
	}
}

func WithModelHook(modelHook any) OpContextOption {
	return func(opContext *OpContext) {
		opContext.ModelHook = modelHook
	}
}
