// Generated by [optioner] command-line tool; DO NOT EDIT
// If you have any questions, please create issues and submit contributions at:
// https://github.com/chenmingyong0423/go-optioner

package updater

type CondContextOption func(*CondContext)

func NewCondContext(filter any, opts ...CondContextOption) *CondContext {
	condContext := &CondContext{
		Filter: filter,
	}

	for _, opt := range opts {
		opt(condContext)
	}

	return condContext
}

func WithUpdates(updates any) CondContextOption {
	return func(condContext *CondContext) {
		condContext.Updates = updates
	}
}

func WithReplacement(replacement any) CondContextOption {
	return func(condContext *CondContext) {
		condContext.Replacement = replacement
	}
}

func WithMongoOptions(mongoOptions any) CondContextOption {
	return func(condContext *CondContext) {
		condContext.MongoOptions = mongoOptions
	}
}

func WithModelHook(modelHook any) CondContextOption {
	return func(condContext *CondContext) {
		condContext.ModelHook = modelHook
	}
}
